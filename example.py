from permutations import Permutation, PegPerm
# TODO you can make perm where signs arent in range(b), fix that
# TODO check that decorator list is treated consistently throughout code

# creating permutation demo
p = Permutation((1, 3, 2), (0, 2, 1), 3)
print(p)

# peg permutations generated by prefix reversals example
s = PegPerm.sort_pr(3, 2)
for e in s:
    print(e)

# compact demo
p = PegPerm(Permutation((1, 3, 2), (0, 0, 0), 2), [0,0,0])
print(p.is_compact())
p = PegPerm(Permutation((1, 3, 2), (0, 0, 0), 2), [0,-1,-1])
print(p.is_compact())

# clean demo
p = PegPerm(Permutation((1, 3, 2), (0, 0, 0), 2), [0,0,0])
for e in p.clean():
    print(e)
p = PegPerm(Permutation((1, 3, 2), (0, 0, 1), 2), [0,0,0])
for e in p.clean():
    print(e)
